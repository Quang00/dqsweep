# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pytest and Flake8

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    env:
      NETSQUIDPYPI_USER: ${{ secrets.NETSQUIDPYPI_USER }}
      NETSQUIDPYPI_PWD: ${{ secrets.NETSQUIDPYPI_PWD }}
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clone squidasm
        uses: actions/checkout@v4
        with:
          repository: QuTech-Delft/squidasm
          path: squidasm
      - name: Install squidasm
        run: |
          cd squidasm
          make install-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest coveralls coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests with coverage
        run: |
            coverage run --source=experiments,utils -m pytest tests/
            coverage report -m
            coverage xml  # Generate coverage.xml for Coveralls

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            path-to-lcov: coverage.xml
